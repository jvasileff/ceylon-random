(function(define) { define(function(require, ex$, module) {
ex$.$CCMM$={"$mod-deps":["ceylon.language\/1.1.0",{path:"com.vasileff.ceylon.random.api\/0.0.1",exp:1}],"$mod-name":"com.vasileff.ceylon.random.sample","$mod-version":"0.0.1","$mod-bin":"7.0","com.vasileff.ceylon.random.sample":{"$pkg-shared":1,LCGRandom:{super:{md:"$",pk:"$",nm:"Basic"},pa:33,mt:"c",an:{doc:["A [Linear Congruential Generator](http:\/\/en.wikipedia.org\/wiki\/Linear_congruential_generator)\n(LCG) pseudorandom number generator,\ndefined by the recurrence relation:\n\n    X\u2099\u208A\u2081 â‰¡ (a X\u2099 + c) (mod m)\n\nUsing the parameters:\n\n    a = 25214903917\n    c = 11\n    m = 2^48\n\n*Note:* for the JavaScript runtime, there is a loss of precision for Integers greater\nthan 2<sup>53<\/sup> which may result in decreased quality of random numbers produced by\nthis class.\n\nSee <http:\/\/en.wikipedia.org\/wiki\/Linear_congruential_generator>"]},sts:[{md:"com.vasileff.ceylon.random.api",pk:"com.vasileff.ceylon.random.api",nm:"Random"}],$m:{nextBits:{$t:{md:"$",pk:"$",nm:"Integer"},pa:3,mt:"m",an:{throws:["Exception","if [[numBits]] is greater than [[randomLimits.maxBits]]."],doc:["Generates an Integer holding `numBits` pseudorandom bits. This method returns `0` if\n`numBits <= 0`."]},ps:[[{$t:{md:"$",pk:"$",nm:"Integer"},mt:"prm",an:{doc:["The number of random bits to generate. Must not be greater than\n[[com.vasileff.ceylon.random.api::randomLimits.maxBits]]"]},nm:"numBits"}]],nm:"nextBits"},next$ga8lci:{$t:{md:"$",pk:"$",nm:"Integer"},mt:"m",nm:"next"},reseed:{$t:{md:"$",pk:"$",nm:"Anything"},pa:1,mt:"m",an:{doc:["Reseed this random number generator. For the Java runtime, the seed value is\nprocessed using `newSeed.xor(a).and(m - 1)` prior to use, and for the JavaScript\nruntime, `newSeed.magnitude % m`."]},ps:[[{$t:{md:"$",pk:"$",nm:"Integer"},mt:"prm",nm:"newSeed"}]],nm:"reseed"}},$at:{xn$ln84jr:{$t:{md:"$",pk:"$",nm:"Integer"},pa:1155,mt:"a",nm:"xn"},c$lq9lpe:{$t:{md:"$",pk:"$",nm:"Integer"},mt:"a",nm:"c"},a$lq9ntg:{$t:{md:"$",pk:"$",nm:"Integer"},mt:"a",nm:"a"},m$lq9b54:{$t:{md:"$",pk:"$",nm:"Integer"},mt:"a",nm:"m"},m64$jbk9ui:{$t:{md:"$",pk:"$",nm:"Integer"},mt:"a",nm:"m64"},seed$cxbn7o:{$t:{md:"$",pk:"$",nm:"Integer"},mt:"a",an:{doc:["The seed. The value is processed by [[reseed]] prior to use."]},nm:"seed"}},ps:[{$t:{md:"$",pk:"$",nm:"Integer"},def:1,mt:"prm",an:{doc:["The seed. The value is processed by [[reseed]] prior to use."]},nm:"seed"}],nm:"LCGRandom"},realInts:{$t:{md:"$",pk:"$",nm:"Boolean"},mt:"a",nm:"realInts"}}};
});
}(typeof define==='function' && define.amd ? define : function (factory) {
if (typeof exports!=='undefined') { factory(require, exports, module);
} else { throw 'no module loader'; }
}));
